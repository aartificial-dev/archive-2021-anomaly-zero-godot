[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform float blurAmount: hint_range(0., 2.) = 0.0;

const float pi = 4. * atan(1.);
const float ang = (3.-sqrt(5.)) * pi;
const float gamma = 1.8;

const float SAMPLES = 150.;
vec3 bokeh(sampler2D samp, vec2 uv, vec2 radius, float lod){
	vec3 col = vec3(0);
    for(float i = 0.0; i < SAMPLES; i++){
        float d = i/SAMPLES;
    	vec2 p=vec2(sin(ang*i),cos(ang*i))*sqrt(d)*radius;
        col+=pow(texture(samp,uv+p,lod).rgb,vec3(gamma));
    }
    return pow(col/SAMPLES,vec3(1./gamma));
}

void fragment(){
	vec4 ocol = texture(TEXTURE, UV);
	vec2 uv = UV;
	
	vec2 pix=1./TEXTURE_PIXEL_SIZE;
	
	float r = blurAmount / 200.0;
	// r*=r*20.;
	float lod=log2(r/SAMPLES*pi*5.);
	//lod=0.;
	vec3 col = bokeh(TEXTURE,uv,r*pix,lod);
	
	COLOR = vec4(col, 1.0);
	
	if(SAMPLES==0.)COLOR=texture(TEXTURE,uv);
}"
